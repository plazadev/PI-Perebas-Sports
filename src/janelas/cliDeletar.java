/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janelas;

import java.awt.Component;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pi.Encapsular.EncapsularClientes;
import pi.Principal.MenuPrincipal;
import pi.Metodos.MetodosCliente;
import pi.Servicos.ServicoCliente;
/**
 *
 * @author Home
 */
public class cliDeletar extends javax.swing.JPanel {
    
    String ultimaBusca = null;
    private Component rootPane;
    
    /**
     * Creates new form cliDeletar
     */
    public cliDeletar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        tfDeletarCliPanel = new javax.swing.JTextField();
        jScrollPane15 = new javax.swing.JScrollPane();
        tbDeletarCli = new javax.swing.JTable();
        btDeletarCliPanel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Deletar Clientes");

        tbDeletarCli.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(11, 15, 127)));
        tbDeletarCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código do Cliente", "Nome do Cliente", "CPF", "Data de Nascimento", "Sexo", "Endereço", "Complemento", "CEP", "Bairro", "Cidade", "Estado", "Telefone", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane15.setViewportView(tbDeletarCli);

        btDeletarCliPanel.setText("Deletar");
        btDeletarCliPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarCliPanelActionPerformed(evt);
            }
        });

        jLabel1.setText("Código Cliente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(tfDeletarCliPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(btDeletarCliPanel)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDeletarCliPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btDeletarCliPanel))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(229, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btDeletarCliPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarCliPanelActionPerformed
       try {
            ServicoCliente.Deletar(Integer.parseInt(tfDeletarCliPanel.getText()));
            refreshList();

        } catch (Exception ex) {
            Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(rootPane, "Produto excluído!",
                "Excluído", JOptionPane.INFORMATION_MESSAGE);
        tfDeletarCliPanel.setText("");
    }//GEN-LAST:event_btDeletarCliPanelActionPerformed

    
    public boolean refreshList() throws SQLException, Exception {
        List<EncapsularClientes> lista = ServicoCliente.ListarItens();
        System.err.println(lista.size());

        //Obtém o elemento representante do conteúdo da tabela na tela
        DefaultTableModel model = (DefaultTableModel) tbDeletarCli.getModel();
        //Indica que a tabela deve excluir todos seus elementos
        //Isto limpará a lista, mesmo que a pesquisa não tenha sucesso
        model.setRowCount(0);

        //Verifica se não existiram resultados. Caso afirmativo, encerra a
        //atualização e indica ao elemento acionador o não sucesso da pesquisa
        if (lista == null || lista.size() <= 0) {
            return false;
        }

        //Percorre a lista de resultados e os adiciona na tabela
        for (int i = 0; i < lista.size(); i++) {
            EncapsularClientes cli = lista.get(i);
            if (cli != null) {
                Object[] row = new Object[12];
                row[0] = cli.getId_cliente();
                row[1] = cli.getNm_cliente();
                row[2] = cli.getSexo();
                SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
                row[3] = formatador.format(cli.getData_nasc());
                row[4] = cli.getEndereco();
                row[5] = cli.getComplemento();
                row[6] = cli.getCep();
                row[7] = cli.getBairro();
                row[8] = cli.getCidade();
                row[9] = cli.getEstado();
                row[10] = cli.getEmail();
                row[11] = cli.getTelefone();
                model.addRow(row);
            }
        }

        //Se chegamos até aqui, a pesquisa teve sucesso, então
        //retornamos "true" para o elemento acionante, indicando
        //que não devem ser exibidas mensagens de erro
        return true;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDeletarCliPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JTable tbDeletarCli;
    private javax.swing.JTextField tfDeletarCliPanel;
    // End of variables declaration//GEN-END:variables
}
